"use strict";angular.module("ambariAdminConsole",["ngRoute","ngAnimate","ui.bootstrap","restangular","toggle-switch","pascalprecht.translate"]).constant("Settings",{baseUrl:"/api/v1",testMode:8e3==window.location.port,mockDataPrefix:"assets/data/"}).config(["RestangularProvider","$httpProvider","$provide",function(e,t,n){e.setBaseUrl("/api/v1"),e.setDefaultHeaders({"X-Requested-By":"ambari"}),t.defaults.headers.post["Content-Type"]="plain/text",t.defaults.headers.put["Content-Type"]="plain/text",t.defaults.headers.post["X-Requested-By"]="ambari",t.defaults.headers.put["X-Requested-By"]="ambari",t.defaults.headers.common["X-Requested-By"]="ambari",t.interceptors.push(["Settings","$q",function(e,t){return{request:function(t){return e.testMode&&("GET"===t.method?t.url=t.mock?e.mockDataPrefix+t.mock:t.url:t.method="GET"),t}}}]),t.responseInterceptors.push(["$rootScope","$q",function(e,t){function n(e){return e}function r(e){return 403==e.status?void(window.location="/"):t.reject(e)}return function(e){return e.then(n,r)}}]),n.factory("TimestampHttpInterceptor",[function(e){return{request:function(t){return t&&"GET"===t.method&&-1===t.url.indexOf("html")&&(t.url+=t.url.indexOf("?")<0?"?":"&",t.url+="_="+(new Date).getTime()),t||e.when(t)}}}]),t.interceptors.push("TimestampHttpInterceptor"),n.decorator("ngFormDirective",["$delegate",function(e){var t=e[0],n=t.controller;return t.controller=["$scope","$element","$attrs","$injector",function(e,t,r,s){var i=s.get("$interpolate");r.$set("name",i(r.name||"")(e)),s.invoke(n,this,{$scope:e,$element:t,$attrs:r})}],e}]),n.decorator("ngModelDirective",["$delegate",function(e){var t=e[0],n=t.controller;return t.controller=["$scope","$element","$attrs","$injector",function(e,t,r,s){var i=s.get("$interpolate");r.$set("name",i(r.name||"")(e)),s.invoke(n,this,{$scope:e,$element:t,$attrs:r})}],e}]),n.decorator("formDirective",["$delegate",function(e){var t=e[0],n=t.controller;return t.controller=["$scope","$element","$attrs","$injector",function(e,t,r,s){var i=s.get("$interpolate");r.$set("name",i(r.name||r.ngForm||"")(e)),s.invoke(n,this,{$scope:e,$element:t,$attrs:r})}],e}])}]),angular.module("ambariAdminConsole").constant("ROUTES",{root:{url:"/",templateUrl:"views/main.html",controller:"MainCtrl"},users:{list:{url:"/users",templateUrl:"views/users/list.html",controller:"UsersListCtrl"},edit:{url:"/users/:id/edit",templateUrl:"views/users/create.html",controller:"UsersCreateCtrl"},create:{url:"/users/new",templateUrl:"views/users/create.html",controller:"UsersCreateCtrl"},show:{url:"/users/:id*",templateUrl:"views/users/show.html",controller:"UsersShowCtrl"}},groups:{list:{url:"/groups",templateUrl:"views/groups/list.html",controller:"GroupsListCtrl"},edit:{url:"/groups/:id/edit",templateUrl:"views/groups/edit.html",controller:"GroupsEditCtrl"},create:{url:"/groups/new",templateUrl:"views/groups/create.html",controller:"GroupsCreateCtrl"}},views:{list:{url:"/views",templateUrl:"views/ambariViews/listTable.html",controller:"ViewsListCtrl"},edit:{url:"/views/:viewId/versions/:version/instances/:instanceId/edit",templateUrl:"views/ambariViews/edit.html",controller:"ViewsEditCtrl"},create:{url:"/views/:viewId/new",templateUrl:"views/ambariViews/create.html",controller:"CreateViewInstanceCtrl"}},stackVersions:{list:{url:"/stackVersions",templateUrl:"views/stackVersions/list.html",controller:"StackVersionsListCtrl"},create:{url:"/stackVersions/create",templateUrl:"views/stackVersions/stackVersionPage.html",controller:"StackVersionsCreateCtrl"},edit:{url:"/stackVersions/:stackName/:versionId/edit",templateUrl:"views/stackVersions/stackVersionPage.html",controller:"StackVersionsEditCtrl"}},clusters:{manageAccess:{url:"/clusters/:id/manageAccess",templateUrl:"views/clusters/manageAccess.html",controller:"ClustersManageAccessCtrl"}},dashboard:{url:"/dashboard",controller:["$window",function(e){e.location.replace("/#/main/dashboard")}],template:""}}).config(["$routeProvider","$locationProvider","ROUTES",function(e,t,n){var r=function(t){t.url?e.when(t.url,t):angular.forEach(t,r)};angular.forEach(n,r)}]).run(["$rootScope","ROUTES",function(e,t){e.ROUTES=t}]),angular.module("ambariAdminConsole").config(["$translateProvider",function(e){e.translations("en",{"CLUSTER.OPERATE":"Operator","CLUSTER.READ":"Read-Only","VIEW.USE":"Use"}),e.preferredLanguage("en")}]),angular.module("ambariAdminConsole").controller("MainCtrl",["$scope","$rootScope","$window","Auth","Alert","$modal","Cluster","View",function(e,t,n,r,s,i,o,a){function c(){o.getAmbariVersion().then(function(t){e.ambariVersion=t})}function u(){o.getStatus().then(function(t){e.cluster=t,e.isLoaded=!0,t&&"INIT"===t.Clusters.provisioning_state&&setTimeout(u,1e3)})["catch"](function(e){s.error("Cannot load cluster status",e.statusText)})}e.signOut=function(){r.signout()["finally"](function(){n.location.pathname=""})},e.ambariVersion=null,e.about=function(){var t=e.ambariVersion,n=i.open({templateUrl:"views/modals/AboutModal.html",controller:["$scope",function(e){e.ok=function(){n.close()},e.ambariVersion=t}]})},e.currentUser=r.getCurrentUser(),e.cluster=null,e.isLoaded=null,u(),c(),e.viewInstances=[],e.updateInstances=function(){a.getAllVisibleInstance().then(function(t){e.viewInstances=t})},e.gotoViewsDashboard=function(){window.location="/#/main/views"},e.$root.$on("instancesUpdate",function(t,n){e.updateInstances()}),e.startInactiveTimeoutMonitoring=function(r){var s=r,o=!0,a=Date.now(),c=function(){o&&(a=Date.now())};$(window).bind("mousemove",c),$(window).bind("keypress",c),$(window).bind("click",c);var u=function(){var r=s-(Date.now()-a);0>r?(o=!1,$(window).unbind("mousemove",c),$(window).unbind("keypress",c),$(window).unbind("click",c),clearInterval(t.userActivityTimeoutInterval),e.signOut()):6e4>r&&!t.timeoutModal&&(t.timeoutModal=i.open({templateUrl:"views/modals/TimeoutWarning.html",backdrop:!1,controller:["$scope","Auth",function(e,r){e.remainTime=60,e.title="Automatic Logout",e.primaryText="Remain Logged In",e.secondaryText="Log Out Now",e.remain=function(){t.timeoutModal.close(),delete t.timeoutModal},e.logout=function(){t.timeoutModal.close(),delete t.timeoutModal,r.signout()["finally"](function(){n.location.pathname=""})},e.countDown=function(){e.remainTime--,e.$apply(),0==e.remainTime&&r.signout()["finally"](function(){n.location.pathname=""})},setInterval(e.countDown,1e3)}]}))};t.userActivityTimeoutInterval=window.setInterval(u,1e3)},e.startNoopPolling=function(){t.noopPollingInterval=setInterval(o.getAmbariTimeout,1e4)},t.userActivityTimeoutInterval||o.getAmbariTimeout().then(function(n){t.userTimeout=1e3*Number(n),t.userTimeout>0&&e.startInactiveTimeoutMonitoring(t.userTimeout)}),t.noopPollingInterval||e.startNoopPolling(),e.updateInstances()}]),angular.module("ambariAdminConsole").controller("NavbarCtrl",["$scope","Cluster","$location","Alert","ROUTES","ConfirmationModal","$rootScope","Stack",function(e,t,n,r,s,i,o,a){function c(){t.getStatus().then(function(t){e.cluster=t,a.allRepos({version:"",cluster:{options:[],current:null}},{}).then(function(t){e.totalRepos=t.itemTotal}),t&&"INIT"===t.Clusters.provisioning_state&&setTimeout(c,1e3)})["catch"](function(e){r.error("Cannot load cluster status",e.statusText)})}e.cluster=null,e.totalRepos=0,e.editCluster={name:"",editingName:!1},c(),e.toggleEditName=function(t){return t&&27!==t.keyCode?!1:(e.editCluster.name=e.cluster.Clusters.cluster_name,void(e.editCluster.editingName=!e.editCluster.editingName))},e.confirmClusterNameChange=function(){i.show("Confirm Cluster Name Change","Are you sure you want to change the cluster name to "+e.editCluster.name+"?").then(function(){e.saveClusterName()})["catch"](function(){e.toggleEditName()})},e.saveClusterName=function(){var n=e.cluster.Clusters.cluster_name,s=e.editCluster.name;t.editName(n,s).then(function(t){e.cluster.Clusters.cluster_name=s,r.success("The cluster has been renamed to "+s+".")})["catch"](function(e){r.error("Cannot rename cluster to "+s,e.data.message)}),e.toggleEditName()},e.isActive=function(e){var t=s;angular.forEach(e.split("."),function(e){t=t[e]});var r=new RegExp(t.url.replace(/(:\w+)/,"\\w+"));return r.test(n.path())}}]),angular.module("ambariAdminConsole").controller("UsersCreateCtrl",["$scope","$routeParams","User","$location","Alert","UnsavedDialog",function(e,t,n,r,s,i){e.user={active:!0};var o="/users";e.createUser=function(){e.form.submitted=!0,e.form.$valid&&n.create({"Users/user_name":e.user.user_name,"Users/password":e.user.password,"Users/active":!!e.user.active,"Users/admin":!!e.user.admin}).then(function(){s.success('Created user <a href="#/users/'+encodeURIComponent(e.user.user_name)+'">'+e.user.user_name+"</a>"),e.form.$setPristine(),r.path(o)})["catch"](function(e){s.error("User creation error",e.data.message)})},e.cancel=function(){e.form.$setPristine(),r.path("/users")},e.$on("$locationChangeStart",function(t,n){e.form.$dirty&&(i().then(function(t){switch(o=n.split("#").pop(),t){case"save":e.createUser();break;case"discard":e.form.$setPristine(),r.path(o);break;case"cancel":o="/users"}}),t.preventDefault())})}]),angular.module("ambariAdminConsole").controller("UsersListCtrl",["$scope","User","$modal","$rootScope",function(e,t,n,r){e.users=[],e.usersPerPage=10,e.currentPage=1,e.totalUsers=1,e.currentNameFilter="",e.maxVisiblePages=20,e.pageChanged=function(){e.loadUsers()},e.usersPerPageChanges=function(){e.resetPagination()},e.loadUsers=function(){t.list({currentPage:e.currentPage,usersPerPage:e.usersPerPage,searchString:e.currentNameFilter,ldap_user:e.currentTypeFilter.value,active:e.currentActiveFilter.value,admin:e.adminFilter}).then(function(t){e.totalUsers=t.data.itemTotal,e.users=t.data.items.map(function(e){return e.Users.encoded_name=encodeURIComponent(e.Users.user_name),e})})},e.resetPagination=function(){e.currentPage=1,e.loadUsers()},e.actvieFilterOptions=[{label:"All",value:"*"},{label:"Active",value:!0},{label:"Inactive",value:!1}],e.currentActiveFilter=e.actvieFilterOptions[0],e.typeFilterOptions=[{label:"All",value:"*"},{label:"Local",value:!1},{label:"LDAP",value:!0}],e.currentTypeFilter=e.typeFilterOptions[0],e.adminFilter=!1,e.toggleAdminFilter=function(){e.adminFilter=!e.adminFilter,e.resetPagination(),e.loadUsers()},e.loadUsers(),r.$watch(function(e){return e.LDAPSynced},function(t){t===!0&&(r.LDAPSynced=!1,e.loadUsers())})}]),angular.module("ambariAdminConsole").controller("UsersShowCtrl",["$scope","$routeParams","User","$modal","$location","ConfirmationModal","Alert","Auth","getDifference","Group","$q",function(e,t,n,r,s,i,o,a,c,u,l){function d(){n.get(t.id).then(function(t){e.user=t.Users,e.isCurrentUser=e.user.user_name===a.getCurrentUser(),e.editingGroupsList=angular.copy(e.user.groups)})}function f(){n.getPrivileges(t.id).then(function(t){var n={clusters:{},views:{}};angular.forEach(t.data.items,function(e){e=e.PrivilegeInfo,"CLUSTER"===e.type?(n.clusters[e.cluster_name]=n.clusters[e.cluster_name]||[],n.clusters[e.cluster_name].push(e.permission_name)):"VIEW"===e.type&&(n.views[e.instance_name]=n.views[e.instance_name]||{privileges:[]},n.views[e.instance_name].version=e.version,n.views[e.instance_name].view_name=e.view_name,n.views[e.instance_name].privileges.push(e.permission_name))}),e.privileges=t.data.items.length?n:null,e.dataLoaded=!0})["catch"](function(e){o.error("Cannot load privileges",e.data.message)})}d(),e.user,e.isCurrentUser=!0,e.dataLoaded=!1,e.isGroupEditing=!1,e.enableGroupEditing=function(){e.isGroupEditing=!0,e.editingGroupsList=angular.copy(e.user.groups)},e.$watch(function(){return e.editingGroupsList},function(t){t&&(angular.equals(t,e.user.groups)||e.updateGroups())},!0),e.updateGroups=function(){var t=e.editingGroupsList.toString().split(",").filter(function(e){return e.trim()}).map(function(e){return e.trim()}),n=c(e.user.groups,t),r=[];angular.forEach(n.del,function(t){r.push(u.removeMemberFromGroup(t,e.user.user_name)["catch"](function(e){o.error("Removing from group error",e.data.message)}))}),angular.forEach(n.add,function(t){r.push(u.addMemberToGroup(t,e.user.user_name)["catch"](function(e){o.error("Cannot add user to group",e.data.message)}))}),l.all(r).then(function(){d()}),e.isGroupEditing=!1},e.cancelUpdate=function(){e.isGroupEditing=!1,e.editingGroupsList=""},e.openChangePwdDialog=function(){var t=r.open({templateUrl:"views/users/modals/changePassword.html",resolve:{userName:function(){return e.user.user_name}},controller:["$scope","userName",function(e,n){e.passwordData={password:"",currentUserPassword:""},e.form={},e.userName=n,e.ok=function(){e.form.passwordChangeForm.submitted=!0,e.form.passwordChangeForm.$valid&&t.close({password:e.passwordData.password,currentUserPassword:e.passwordData.currentUserPassword})},e.cancel=function(){t.dismiss("cancel")}}]});t.result.then(function(t){n.setPassword(e.user,t.password,t.currentUserPassword).then(function(){o.success("Password changed.")})["catch"](function(e){o.error("Cannot change password",e.data.message)})})},e.toggleUserActive=function(){e.isCurrentUser||i.show("Change Status",'Are you sure you want to change status for user "'+e.user.user_name+'" to '+(e.user.active?"inactive":"active")+"?").then(function(){n.setActive(e.user.user_name,e.user.active)})["catch"](function(){e.user.active=!e.user.active})},e.toggleUserAdmin=function(){if(!e.isCurrentUser){var t="";t=e.user.admin?"Are you sure you want to revoke Admin privilege from user ":"Are you sure you want to grant Admin privilege to user ",i.show("Change Admin Privilege",t+'"'+e.user.user_name+'"?').then(function(){n.setAdmin(e.user.user_name,e.user.admin).then(function(){f()})})["catch"](function(){e.user.admin=!e.user.admin})}},e.deleteUser=function(){i.show("Delete User",'Are you sure you want to delete user "'+e.user.user_name+'"?').then(function(){n["delete"](e.user.user_name).then(function(){s.path("/users")})})},f()}]),angular.module("ambariAdminConsole").controller("GroupsListCtrl",["$scope","Group","$modal","ConfirmationModal","$rootScope",function(e,t,n,r,s){function i(){t.all({currentPage:e.currentPage,groupsPerPage:e.groupsPerPage,searchString:e.currentNameFilter,ldap_group:e.currentTypeFilter.value}).then(function(t){e.totalGroups=t.itemTotal,e.groups=t})["catch"](function(e){console.error("Get groups list error")})}e.groups=[],e.groupsPerPage=10,e.currentPage=1,e.totalGroups=1,e.currentNameFilter="",e.maxVisiblePages=20,e.pageChanged=function(){i()},e.groupsPerPageChanges=function(){i()},e.resetPagination=function(){e.currentPage=1,i()},e.typeFilterOptions=[{label:"All",value:"*"},{label:"Local",value:!1},{label:"LDAP",value:!0}],e.currentTypeFilter=e.typeFilterOptions[0],i(),s.$watch(function(e){return e.LDAPSynced},function(e){e===!0&&(s.LDAPSynced=!1,i())})}]),angular.module("ambariAdminConsole").controller("GroupsCreateCtrl",["$scope","Group","$location","Alert","UnsavedDialog",function(e,t,n,r,s){e.group=new t;var i="/groups";e.createGroup=function(){e.form.submitted=!0,e.form.$valid&&e.group.save().then(function(){r.success('Created group <a href="#/groups/'+e.group.group_name+'/edit">'+e.group.group_name+"</a>"),e.form.$setPristine(),n.path(i)})["catch"](function(e){r.error("Group creation error",e.data.message)})},e.cancel=function(){e.form.$setPristine(),n.path("/groups")},e.$on("$locationChangeStart",function(t,r){e.form.$dirty&&(s().then(function(t){switch(i=r.split("#").pop(),t){case"save":e.createGroup();break;case"discard":e.form.$setPristine(),n.path(i);break;case"cancel":i="/groups"}}),t.preventDefault())})}]),angular.module("ambariAdminConsole").controller("GroupsEditCtrl",["$scope","Group","$routeParams","Alert","ConfirmationModal","$location",function(e,t,n,r,s,i){function o(){e.group.getMembers().then(function(t){e.groupMembers=t,e.group.editingUsers=angular.copy(e.groupMembers)})}e.editMode=!1,e.group=new t(n.id),e.group.editingUsers=[],e.groupMembers=[],e.dataLoaded=!1,e.isMembersEditing=!1,e.$watch(function(){return e.group.editingUsers},function(t){t&&!angular.equals(t,e.groupMembers)&&e.updateMembers()},!0),e.enableMembersEditing=function(){e.isMembersEditing=!0,e.group.editingUsers=angular.copy(e.groupMembers)},e.cancelUpdate=function(){e.isMembersEditing=!1,e.group.editingUsers=""},e.updateMembers=function(){var t=e.group.editingUsers.toString().split(",").filter(function(e){return e.trim()}).map(function(e){return e.trim()});e.group.members=t,e.group.saveMembers()["catch"](function(e){r.error("Cannot update group members","<div class='break-word'>"+e.message+"</div>")})["finally"](function(){o()}),e.isMembersEditing=!1},e.group.isLDAP().then(function(t){e.group.ldap_group=t,o()}),e.deleteGroup=function(e){s.show("Delete Group",'Are you sure you want to delete group "'+e.group_name+'"?').then(function(){e.destroy().then(function(){i.path("/groups")})["catch"](function(){})})},t.getPrivileges(n.id).then(function(t){var n={clusters:{},views:{}};angular.forEach(t.data.items,function(e){e=e.PrivilegeInfo,"CLUSTER"===e.type?(n.clusters[e.cluster_name]=n.clusters[e.cluster_name]||[],n.clusters[e.cluster_name].push(e.permission_name)):"VIEW"===e.type&&(n.views[e.instance_name]=n.views[e.instance_name]||{privileges:[]},n.views[e.instance_name].version=e.version,n.views[e.instance_name].view_name=e.view_name,n.views[e.instance_name].privileges.push(e.permission_name))}),e.privileges=t.data.items.length?n:null,e.dataLoaded=!0})["catch"](function(e){r.error("Cannot load privileges",e.data.message)})}]),angular.module("ambariAdminConsole").controller("ViewsListCtrl",["$scope","View","$modal","Alert","ConfirmationModal","$location",function(e,t,n,r,s,i){function o(n,r,s){var i=t.checkViewVersionStatus(n.view_name,s);c.push(i),i.promise.then(function(t){c.splice(c.indexOf(i),1),"DEPLOYED"!==t&&"ERROR"!==t?o(n,r,s):e.$evalAsync(function(){r.status=t,angular.forEach(n.versions,function(e){"DEPLOYED"===e.status&&(n.canCreateInstance=!0)})})})}function a(){t.all().then(function(t){e.views=t,e.getFilteredViews(),angular.forEach(t,function(e){angular.forEach(e.versions,function(t,n){("DEPLOYED"!==t.status||"ERROR"!==t.status)&&o(e,t,n)})})})["catch"](function(e){r.error("Cannot load views",e.data.message)})}var c=[];e.$on("$locationChangeStart",function(){c.forEach(function(e){e.reject()})}),a(),e.createInstance=function(e){var t=n.open({templateUrl:"views/ambariViews/modals/create.html",size:"lg",controller:"CreateViewInstanceCtrl",resolve:{viewVersion:function(){return e.versionsList[e.versionsList.length-1]}}});t.result.then(a)},e.viewsFilter="",e.filteredViews=[],e.getFilteredViews=function(t){var n=[],r=e.viewsFilter.toLowerCase();n=r?e.views.map(function(e){if(e.isOpened=!0,e.view_name.toLowerCase().indexOf(r)>=0)return e;var t=[];if(angular.forEach(e.instances,function(e){e.ViewInstanceInfo.label.toLowerCase().indexOf(r)>=0&&t.push(e)}),t.length){var n=angular.copy(e);return n.instances=t,n}}).filter(function(e){return!!e}):e.views.map(function(e){return e.isOpened=!1,e}),e.filteredViews=n},e.gotoCreate=function(e,t){t&&i.path("/views/"+e+"/new")}}]),angular.module("ambariAdminConsole").controller("ViewsEditCtrl",["$scope","$routeParams","Cluster","View","Alert","PermissionLoader","PermissionSaver","ConfirmationModal","$location","UnsavedDialog",function(e,t,n,r,s,i,o,a,c,u){function l(n){r.getInstance(t.viewId,t.version,t.instanceId).then(function(t){switch(e.instance=t,e.settings={visible:e.instance.ViewInstanceInfo.visible,label:e.instance.ViewInstanceInfo.label,description:e.instance.ViewInstanceInfo.description},n){case"details":p(),d(t);break;case"settings":p(!0);break;case"cluster":d(t)}})["catch"](function(e){s.error("Cannot load instance info",e.data.message)})}function d(t){t.ViewInstanceInfo.cluster_handle?(e.isLocalCluster=!0,e.cluster=t.ViewInstanceInfo.cluster_handle):(e.isLocalCluster=!1,e.cluster=e.clusters.length>0?e.clusters[0]:"No Clusters"),e.originalLocalCluster=e.isLocalCluster,e.isConfigurationEmpty=!e.numberOfClusterConfigs,e.isSettingsEmpty=!e.numberOfSettingsConfigs}function f(t){var n=e.configurationMeta,r=n.filter(function(e){return e.clusterConfig}).map(function(e){return e.name});return-1!==r.indexOf(t)}function p(t){var n=!t,r=angular.copy(e.instance.ViewInstanceInfo.properties);n&&(e.configuration=angular.copy(e.instance.ViewInstanceInfo.properties));for(var s in r)r.hasOwnProperty(s)&&(!f(s)||n)&&(e.configuration[s]="null"===r[s]?"":r[s])}function m(){e.configurationMeta.forEach(function(t){t.masked&&!e.editConfigurationDisabled&&t.clusterConfig&&!e.isLocalCluster&&(e.configuration[t.name]=""),t.clusterConfig||delete e.configurationBeforeEdit[t.name]})}function g(){i.getViewPermissions({viewName:t.viewId,version:t.version,instanceId:t.instanceId}).then(function(t){e.permissionsEdit=t,e.permissions=angular.copy(t),e.isPermissionsEmpty=angular.equals({},e.permissions)})["catch"](function(e){s.error("Cannot load permissions",e.data.message)})}e.identity=angular.identity,e.isConfigurationEmpty=!0,e.isSettingsEmpty=!0,r.getMeta(t.viewId,t.version).then(function(t){e.configurationMeta=t.data.ViewVersionInfo.parameters,e.clusterConfigurable=t.data.ViewVersionInfo.cluster_configurable,e.clusterConfigurableErrorMsg=e.clusterConfigurable?"":"This view cannot use this option",angular.forEach(e.configurationMeta,function(t){t.displayName=t.name.replace(/\./g,".​"),t.clusterConfig=!!t.clusterConfig,t.clusterConfig||e.numberOfSettingsConfigs++,e.numberOfClusterConfigs=e.numberOfClusterConfigs+!!t.clusterConfig}),l("details")}),e.permissions=[],g(),e.clusterConfigurable=!1,e.clusterConfigurableErrorMsg="",e.clusters=[],e.cluster=null,e.noClusterAvailible=!0,e.editSettingsDisabled=!0,e.editDetailsSettingsDisabled=!0,e.numberOfClusterConfigs=0,e.numberOfSettingsConfigs=0,e.enableLocalCluster=function(){angular.extend(e.configuration,e.configurationBeforeEdit),e.propertiesForm.$setPristine()},e.disableLocalCluster=function(){m()},e.toggleSettingsEdit=function(){e.editSettingsDisabled=!e.editSettingsDisabled,e.settingsBeforeEdit=angular.copy(e.configuration),e.configurationMeta.forEach(function(t){!t.masked||e.editSettingsDisabled||t.clusterConfig||(e.configuration[t.name]=""),t.clusterConfig&&delete e.settingsBeforeEdit[t.name]})},e.toggleDetailsSettingsEdit=function(){e.editDetailsSettingsDisabled=!e.editDetailsSettingsDisabled,e.settingsBeforeEdit=angular.copy(e.configuration),e.configurationMeta.forEach(function(t){!t.masked||e.editDetailsSettingsDisabled||t.clusterConfig||(e.configuration[t.name]=""),t.clusterConfig&&delete e.settingsBeforeEdit[t.name]})},n.getAllClusters().then(function(t){t.length>0?(t.forEach(function(t){e.clusters.push(t.Clusters.cluster_name)}),e.noClusterAvailible=!1):e.clusters.push("No Clusters"),e.cluster=e.clusters[0]}),e.saveSettings=function(n){if(e.settingsForm.$valid){var i={ViewInstanceInfo:{properties:{}}};return e.configurationMeta.forEach(function(t){t.clusterConfig||(i.ViewInstanceInfo.properties[t.name]=e.configuration[t.name])}),r.updateInstance(t.viewId,t.version,t.instanceId,i).success(function(){n?n():(l("settings"),e.editSettingsDisabled=!0,e.settingsForm.$setPristine())})["catch"](function(e){s.error("Cannot save settings",e.data.message)})}},e.cancelSettings=function(){angular.extend(e.configuration,e.settingsBeforeEdit),e.editSettingsDisabled=!0,e.settingsForm.$setPristine()},e.saveDetails=function(n){if(e.detailsForm.$valid){var i={ViewInstanceInfo:{visible:e.settings.visible,label:e.settings.label,description:e.settings.description}};return r.updateInstance(t.viewId,t.version,t.instanceId,i).success(function(){e.$root.$emit("instancesUpdate"),n?n():(l("cluster"),e.editDetailsSettingsDisabled=!0,e.settingsForm.$setPristine())})["catch"](function(e){s.error("Cannot save settings",e.data.message)})}},e.cancelDetails=function(){e.settings={visible:e.instance.ViewInstanceInfo.visible,label:e.instance.ViewInstanceInfo.label,description:e.instance.ViewInstanceInfo.description},e.editDetailsSettingsDisabled=!0,e.settingsForm.$setPristine()},e.editConfigurationDisabled=!0,e.togglePropertiesEditing=function(){e.editConfigurationDisabled=!e.editConfigurationDisabled,e.configurationBeforeEdit=angular.copy(e.configuration),m()},e.saveConfiguration=function(){if(e.propertiesForm.$valid){var n={ViewInstanceInfo:{properties:{}}};return e.isLocalCluster?n.ViewInstanceInfo.cluster_handle=e.cluster:(n.ViewInstanceInfo.cluster_handle=null,e.configurationMeta.forEach(function(t){t.clusterConfig&&(n.ViewInstanceInfo.properties[t.name]=e.configuration[t.name])})),e.originalLocalCluster=e.isLocalCluster,r.updateInstance(t.viewId,t.version,t.instanceId,n).success(function(){e.editConfigurationDisabled=!0,e.propertiesForm.$setPristine()})["catch"](function(t){var n=t.data.message;if(n=n.substr(n.indexOf("{")),t.status>=400&&!e.isLocalCluster)try{var r=JSON.parse(n);n=r.detail,angular.forEach(r.propertyResults,function(t,n){e.propertiesForm[n].validationError=!t.valid,t.valid||(e.propertiesForm[n].validationMessage=t.detail)})}catch(i){console.error("Unable to parse error message:",t.message)}s.error("Cannot save properties",n)})}},e.cancelConfiguration=function(){angular.extend(e.configuration,e.configurationBeforeEdit),e.isLocalCluster=e.originalLocalCluster,e.editConfigurationDisabled=!0,e.propertiesForm.$setPristine()},e.editPermissionDisabled=!0,e.cancelPermissions=function(){e.permissionsEdit=angular.copy(e.permissions),e.editPermissionDisabled=!0},e.savePermissions=function(){return e.editPermissionDisabled=!0,o.saveViewPermissions(e.permissionsEdit,{view_name:t.viewId,version:t.version,instance_name:t.instanceId}).then(g)["catch"](function(e){g(),s.error("Cannot save permissions",e.data.message)})},e.$watch(function(){return e.permissionsEdit},function(t){t&&e.savePermissions()},!0),e.deleteInstance=function(e){a.show("Delete View Instance","Are you sure you want to delete View Instance "+e.ViewInstanceInfo.label+"?").then(function(){r.deleteInstance(e.ViewInstanceInfo.view_name,e.ViewInstanceInfo.version,e.ViewInstanceInfo.instance_name).then(function(){c.path("/views")})["catch"](function(e){s.error("Cannot delete instance",e.data.message)})})},e.$on("$locationChangeStart",function(t,n){(e.settingsForm.$dirty||e.propertiesForm.$dirty)&&(u().then(function(t){switch(n=n.split("#").pop(),t){case"save":e.settingsForm.$valid&&e.propertiesForm.$valid&&e.saveSettings(function(){e.saveConfiguration().then(function(){e.propertiesForm.$setPristine(),e.settingsForm.$setPristine(),c.path(n)})});break;case"discard":e.propertiesForm.$setPristine(),e.settingsForm.$setPristine(),c.path(n);break;case"cancel":n=""}}),t.preventDefault())})}]),angular.module("ambariAdminConsole").controller("CreateViewInstanceCtrl",["$scope","View","Alert","Cluster","$routeParams","$location","UnsavedDialog",function(e,t,n,r,s,i,o){function a(){t.getMeta(s.viewId,e.version).then(function(t){var n,r=t.data;e.view=r,n=r.ViewVersionInfo.parameters,angular.forEach(n,function(t){t.value=t.defaultValue,t.clusterConfig=!!t.clusterConfig,t.displayName=t.name.replace(/\./g,".​"),t.clusterConfig?e.numberOfClusterConfigs++:e.numberOfSettingConfigs++}),e.clusterConfigurable=r.ViewVersionInfo.cluster_configurable,e.clusterConfigurableErrorMsg=e.clusterConfigurable?"":"This view cannot use this option",e.instance={view_name:r.ViewVersionInfo.view_name,version:r.ViewVersionInfo.version,instance_name:"",label:"",visible:!0,icon_path:"",icon64_path:"",properties:n,description:"",isLocalCluster:!1},c()})}function c(){r.getAllClusters().then(function(t){t.length>0?(t.forEach(function(t){e.clusters.push(t.Clusters.cluster_name)}),e.noClusterAvailible=!1,e.instance.isLocalCluster=e.clusterConfigurable):e.clusters.push("No Clusters"),e.cluster=e.clusters[0]})}e.form={};var u="";e.$watch(function(e){return e.version},function(e){e&&a()}),e.enableLocalCluster=function(){e.errorKeys.length>0&&(e.errorKeys.forEach(function(t){try{e.form.instanceCreateForm[t].validationError=!1,e.form.instanceCreateForm[t].validationMessage=""}catch(n){console.log("Unable to reset error message for prop:",t)}}),e.errorKeys=[])},e.isAdvancedClosed=!0,e.instanceExists=!1,e.errorKeys=[],e.clusterConfigurable=!1,e.clusterConfigurableErrorMsg="",e.clusters=[],e.noClusterAvailible=!0,e.cluster=null,e.numberOfClusterConfigs=0,e.numberOfSettingConfigs=0,e.versions=[],e.version=null,t.getVersions(s.viewId).then(function(t){e.versions=t,e.version=e.versions[e.versions.length-1]}),e.nameValidationPattern=/^\s*\w*\s*$/,e.save=function(){e.form.instanceCreateForm.isSaving||(e.form.instanceCreateForm.submitted=!0,e.form.instanceCreateForm.$valid&&(e.form.instanceCreateForm.isSaving=!0,e.instance.clusterName=e.cluster,t.createInstance(e.instance).then(function(t){n.success("Created View Instance "+e.instance.instance_name),e.form.instanceCreateForm.$setPristine(),u?i.path(u):i.path("/views/"+e.instance.view_name+"/versions/"+e.instance.version+"/instances/"+e.instance.instance_name+"/edit"),e.form.instanceCreateForm.isSaving=!1,e.$root.$emit("instancesUpdate")})["catch"](function(t){var r=t.message,s=!0;if(t.status>=400&&!e.instance.isLocalCluster)try{var i=JSON.parse(r);r=i.detail,angular.forEach(i.propertyResults,function(t,n){e.form.instanceCreateForm[n].validationError=!t.valid,t.valid||(s=!1,e.form.instanceCreateForm[n].validationMessage=t.detail,e.errorKeys.push(n))}),s&&(e.form.instanceCreateForm.generalValidationError=r)}catch(o){console.error("Unable to parse error message:",t.message)}n.error("Cannot create instance",r),e.form.instanceCreateForm.isSaving=!1})))},e.cancel=function(){e.form.instanceCreateForm.$setPristine(),i.path("/views")},e.$on("$locationChangeStart",function(t,n){e.form.instanceCreateForm.$dirty&&(o().then(function(t){switch(u=n.split("#").pop(),t){case"save":e.save();break;case"discard":e.form.instanceCreateForm.$setPristine(),i.path(u);break;case"cancel":u=""}}),t.preventDefault())})}]),angular.module("ambariAdminConsole").controller("ClustersManageAccessCtrl",["$scope","Cluster","$routeParams","Alert","PermissionLoader","PermissionSaver",function(e,t,n,r,s,i){function o(){s.getClusterPermissions({clusterId:n.id}).then(function(t){e.permissionsEdit=t,e.permissions=angular.copy(t)})["catch"](function(e){r.error("Cannot load cluster data",e.data.message)})}e.identity=angular.identity,o(),e.isEditMode=!1,e.permissions={},e.clusterName=n.id,e.toggleEditMode=function(){e.isEditMode=!e.isEditMode},e.cancel=function(){e.isEditMode=!1,e.permissionsEdit=angular.copy(e.permissions)},e.save=function(){i.saveClusterPermissions(e.permissionsEdit,{clusterId:n.id}).then(o)["catch"](function(e){r.error("Cannot save permissions",e.data.message),o()}),e.isEditMode=!1},e.$watch(function(){return e.permissionsEdit},function(t){t&&e.save()},!0)}]),angular.module("ambariAdminConsole").controller("StackVersionsCreateCtrl",["$scope","Stack","$routeParams","$location","Alert",function(e,t,n,r,s){e.createController=!0,e.osList=[],e.skipValidation=!1,e.selectedOS=0,e.repoSubversion="",e.clusterName=n.clusterName,e.subversionPattern=/^\d+\.\d+(-\d+)?$/,e.upgradeStack={selected:null,options:[]},e.fetchStackVersionFilterList=function(){return t.allStackVersions().then(function(t){var n=[];angular.forEach(t,function(e){e.upgrade_packs.length>0&&e.active&&n.push(e)}),e.upgradeStack.options=n,e.upgradeStack.selected=n[n.length-1],e.afterStackVersionChange()})["catch"](function(e){s.error("Fetch stack version filter list error",e.message)})},e.fetchStackVersionFilterList(),e.save=function(){return t.validateBaseUrls(e.skipValidation,e.osList,e.upgradeStack.selected).then(function(n){0===n.length?t.addRepo(e.upgradeStack.selected,e.repoSubversion,e.osList).success(function(){var t=e.upgradeStack.selected.stack_version+"."+e.repoSubversion,n=e.upgradeStack.selected.stack_name;s.success('Created version <a href="#/stackVersions/'+n+"/"+t+'/edit">'+n+"-"+t+"</a>"),r.path("/stackVersions")}).error(function(e){s.error("Version creation error",e.message)}):t.highlightInvalidUrls(n)})},e.afterStackVersionChange=function(){t.getSupportedOSList(e.upgradeStack.selected.stack_name,e.upgradeStack.selected.stack_version).then(function(t){
var n=t.operating_systems;e.osList=n.map(function(e){return e.selected=!1,e.repositories.forEach(function(e){e.Repositories.base_url=""}),e})})["catch"](function(e){s.error("getSupportedOSList error",e.message)})},e.updateCurrentVersionInput=function(){e.currentVersionInput=e.upgradeStack.selected.displayName+"."+angular.element('[name="version"]')[0].value},e.clearErrors=function(){e.osList&&e.osList.forEach(function(e){e.repositories&&e.repositories.forEach(function(e){e.hasError=!1})})},e.clearError=function(){this.repository.hasError=!1},e.toggleOSSelect=function(){this.os.repositories.forEach(function(e){e.hasError=!1}),this.os.selected?e.selectedOS++:e.selectedOS--},e.hasValidationErrors=function(){var t=!1;return e.osList&&e.osList.forEach(function(e){e.repositories&&e.repositories.forEach(function(e){e.hasError&&(t=!0)})}),t},e.cancel=function(){e.editVersionDisabled=!0,r.path("/stackVersions")}}]),angular.module("ambariAdminConsole").controller("StackVersionsListCtrl",["$scope","Cluster","Stack","$routeParams",function(e,t,n,r){e.clusterName=r.clusterName,e.filter={version:"",cluster:{options:[],current:null}},e.pagination={totalRepos:10,maxVisiblePages:20,itemsPerPage:10,currentPage:1},e.tableInfo={total:0,showed:0,filtered:0},e.stacks=[],e.dropDownClusters=[],e.selectedCluster=e.dropDownClusters[0],e.resetPagination=function(){e.pagination.currentPage=1,e.loadAllData()},e.pageChanged=function(){e.loadAllData()},e.goToCluster=function(){window.location.replace("/#/main/admin/stack/versions")},e.clearFilters=function(){e.filter.version="",e.filter.cluster.current=e.filter.cluster.options[0],e.resetPagination()},e.fetchRepoClusterStatus=function(){var n=e.clusters&&e.clusters.length>0?e.clusters[0].Clusters.cluster_name:null;n&&angular.forEach(e.repos,function(e){t.getRepoVersionStatus(n,e.id).then(function(t){e.status=t.status,e.totalHosts=t.totalHosts,e.currentHosts=t.currentHosts,e.installedHosts=t.installedHosts,e.stackVersionId=t.stackVersionId,e.cluster="current"==e.status||"installed"==e.status?n:""})})},e.fetchRepos=function(){return n.allRepos(e.filter,e.pagination).then(function(t){e.pagination.totalRepos=t.itemTotal,e.repos=t.items,e.tableInfo.total=t.itemTotal,e.tableInfo.showed=t.showed})},e.fillClusters=function(t){e.dropDownClusters=[].concat(t),e.selectedCluster=e.dropDownClusters[0],angular.forEach(t,function(n){var r=[{label:"All",value:""}];angular.forEach(t,function(e){r.push({label:e.Clusters.cluster_name,value:e.Clusters.cluster_name})}),e.filter.cluster.options=r,e.filter.cluster.current=r[0]})},e.fetchClusters=function(){return t.getAllClusters().then(function(t){t&&t.length>0&&(e.clusters=t,e.fillClusters(t))})},e.loadAllData=function(){e.fetchClusters().then(function(){return e.fetchRepos()}).then(function(){e.fetchRepoClusterStatus()})},e.loadAllData()}]),angular.module("ambariAdminConsole").controller("StackVersionsEditCtrl",["$scope","$location","Cluster","Stack","$routeParams","ConfirmationModal","Alert",function(e,t,n,r,s,i,o){e.editController=!0,e.osList=[],e.skipValidation=!1,e.selectedOS=0,e.loadStackVersionInfo=function(){return r.getRepo(s.versionId,s.stackName).then(function(t){e.id=t.id,e.stack=t.stack,e.stackName=t.stackName,e.versionName=t.versionName,e.displayName=t.displayName,e.stackVersion=t.stackVersion,e.updateObj=t.updateObj,e.subversion=t.versionName.substring(4),e.defaulfOSRepos={},t.updateObj.operating_systems.forEach(function(t){e.defaulfOSRepos[t.OperatingSystems.os_type]={defaultBaseUrl:t.repositories[0].Repositories.base_url,defaultUtilsUrl:t.repositories[1].Repositories.base_url}}),e.repoVersionFullName=t.repoVersionFullName,angular.forEach(t.osList,function(e){e.selected=!0}),e.selectedOS=t.osList.length,e.osList=t.osList,e.repoStatus=n.repoStatusCache[e.id],e.repoStatus?e.deleteEnabled=e.isDeletable():e.fetchClusters().then(function(){return e.fetchRepoClusterStatus()}).then(function(){e.deleteEnabled=e.isDeletable()}),e.addMissingOSList()})},e.isDeletable=function(){return!("current"==e.repoStatus||"installed"==e.repoStatus)},e.addMissingOSList=function(){r.getSupportedOSList(e.stackName,e.stackVersion).then(function(t){var n={};angular.forEach(e.osList,function(e){n[e.OperatingSystems.os_type]=e});var r=t.operating_systems.map(function(e){return n[e.OperatingSystems.os_type]||{OperatingSystems:{os_type:e.OperatingSystems.os_type},repositories:[{Repositories:{base_url:"",repo_id:"HDP-"+s.versionId,repo_name:"HDP"}},{Repositories:{base_url:"",repo_id:"HDP-UTILS-"+s.versionId,repo_name:"HDP-UTILS"}}],selected:!1}});e.osList=r})["catch"](function(e){o.error("getSupportedOSList error",e.message)})},e.defaulfOSRepos={},e.save=function(){e.editVersionDisabled=!0,delete e.updateObj.href,e.updateObj.operating_systems=[];var t=!1;angular.forEach(e.osList,function(n){var r=e.defaulfOSRepos[n.OperatingSystems.os_type];if(n.selected){var s=n.repositories;r&&s[0].Repositories.base_url==r.defaultBaseUrl&&s[1].Repositories.base_url==r.defaultUtilsUrl||(t=!0),e.updateObj.operating_systems.push(n)}else r&&(t=!0)}),t&&!e.deleteEnabled?i.show("Confirm Base URL Change","You are about to change repository Base URLs that are already in use. Please confirm that you intend to make this change and that the new Base URLs point to the same exact Stack version and build","Confirm Change").then(function(){e.updateRepoVersions()}):e.updateRepoVersions()},e.updateRepoVersions=function(){var n={stack_name:e.stackName,stack_version:e.stackVersion};return r.validateBaseUrls(e.skipValidation,e.osList,n).then(function(n){0===n.length?r.updateRepo(e.stackName,e.stackVersion,e.id,e.updateObj).then(function(){o.success('Edited version <a href="#/stackVersions/'+e.stackName+"/"+e.versionName+'/edit">'+e.displayName+"</a>"),t.path("/stackVersions")})["catch"](function(e){o.error("Version update error",e.message)}):r.highlightInvalidUrls(n)})},e.fetchRepoClusterStatus=function(){var t=e.clusters&&e.clusters.length>0?e.clusters[0].Clusters.cluster_name:null;return t?n.getRepoVersionStatus(t,e.id).then(function(t){e.repoStatus=t.status}):null},e.fetchClusters=function(){return n.getAllClusters().then(function(t){e.clusters=t})},e["delete"]=function(){i.show("Deregister Version",{url:"views/modals/BodyForDeregisterVersion.html",scope:{displayName:e.displayName}}).then(function(){r.deleteRepo(e.stackName,e.stackVersion,e.id).then(function(){t.path("/stackVersions")})["catch"](function(e){o.error("Version delete error",e.message)})})},e.loadStackVersionInfo(),e.clearErrors=function(){e.osList&&e.osList.forEach(function(e){e.repositories&&e.repositories.forEach(function(e){e.hasError=!1})})},e.clearError=function(){this.repository.hasError=!1},e.toggleOSSelect=function(){this.os.repositories.forEach(function(e){e.hasError=!1}),this.os.selected?e.selectedOS++:e.selectedOS--},e.hasValidationErrors=function(){var t=!1;return e.osList&&e.osList.forEach(function(e){e.repositories&&e.repositories.forEach(function(e){e.hasError&&(t=!0)})}),t},e.cancel=function(){e.editVersionDisabled=!0,t.path("/stackVersions")}}]),angular.module("ambariAdminConsole").directive("linkTo",function(){return{restrict:"E",transclude:!0,replace:!0,scope:{route:"@",id:"@"},template:'<a href="#{{href}}" ng-transclude></a>',controller:["$scope","ROUTES",function(e,t){var n=t;angular.forEach(e.route.split("."),function(e){n=n[e]}),e.href=n.url.replace(":id",e.id)}]}}),angular.module("ambariAdminConsole").directive("passwordVerify",function(){return{require:"ngModel",restrict:"A",scope:{passwordVerify:"="},link:function(e,t,n,r){e.$watch(function(){return r.$pristine&&angular.isUndefined(r.$modelValue)||e.passwordVerify===r.$modelValue},function(e){r.$setValidity("passwordVerify",e)})}}}),angular.module("ambariAdminConsole").directive("disabledTooltip",function(){return{restrict:"A",link:function(e,t,n,r){n.ngDisabled&&e.$watch(function(e){return e[n.ngDisabled]},function(e){e?t.tooltip({title:n.disabledTooltip}):t.tooltip("destroy")})}}}),angular.module("ambariAdminConsole").directive("editableList",["$q","$document","$location",function(e,t,n){return{restrict:"E",templateUrl:"views/directives/editableList.html",scope:{itemsSource:"=",resourceType:"@",editable:"="},link:function(e,t,n,r){var s=t.find("[contenteditable]"),i=function(){e.$apply(function(){e.input=s.text()})},o=function(){var e=window.navigator.userAgent,t=e.indexOf("MSIE ");return t>0?!!parseInt(e.substring(t+5,e.indexOf(".",t))):navigator.userAgent.match(/Trident\/7\./)?!0:!1};e.$watch(function(){return e.input},function(t){""===t&&e.clearInput()}),e.clearInput=function(){s.html("").blur()},e.focusOnInput=function(){setTimeout(function(){var e=s[0],t=window.getSelection(),n=document.createRange();e.innerHTML=" ",n.selectNodeContents(e),o()||t.removeAllRanges(),t.addRange(n),document.execCommand("delete",!1,null)},0)},o()?s.keypress(function(t){e.$apply(function(){e.input=s.text()+t["char"]})}):s.on("input",i),s.on("keydown",function(t){switch(t.which){case 27:s.html("").blur(),i();break;case 13:return e.$apply(function(){e.addItem(),e.focusOnInput()}),!1;case 40:e.downArrowHandler();break;case 38:e.upArrowHandler()}})},controller:["$scope","$injector","$modal",function(e,t,r){var s=t.get(e.resourceType);e.identity=angular.identity,e.items=angular.copy(e.itemsSource),e.editMode=!1,e.input="",e.typeahead=[],e.selectedTypeahed=0,e.$watch(function(){return e.itemsSource},function(t){e.items=angular.copy(e.itemsSource)},!0),e.$watch(function(){return e.input},function(t){if(t){var t=t.split(",").filter(function(e){return e=e.replace("&nbsp;",""),!!e.trim()}).map(function(e){return e.trim()});t.length>1?(angular.forEach(t,function(t){e.addItem(t)}),e.clearInput(),e.focusOnInput()):s.listByName(encodeURIComponent(t)).then(function(t){var n=[];angular.forEach(t.data.items,function(t){var r;"User"===e.resourceType?r=t.Users.user_name:"Group"===e.resourceType&&(r=t.Groups.group_name),e.items.indexOf(r)<0&&n.push(r)}),e.typeahead=n.slice(0,5),e.selectedTypeahed=0})}else e.typeahead=[],e.selectedTypeahed=0,e.focusOnInput()}),e.enableEditMode=function(t){e.editable&&!e.editMode&&(e.editMode=!0,e.focusOnInput()),t.stopPropagation()},e.cancel=function(t){e.editMode=!1,e.items=angular.copy(e.itemsSource),e.input="",t.stopPropagation()},e.save=function(t){e.input&&e.addItem(e.input),e.itemsSource=e.items,e.editMode=!1,e.input="",t&&t.stopPropagation()},e.downArrowHandler=function(){e.$apply(function(){e.selectedTypeahed=(e.selectedTypeahed+1)%e.typeahead.length})},e.upArrowHandler=function(){e.$apply(function(){e.selectedTypeahed-=1,e.selectedTypeahed=e.selectedTypeahed<0?e.typeahead.length-1:e.selectedTypeahed})},e.addItem=function(t){t=t?t:e.typeahead.length?e.typeahead[e.selectedTypeahed]:e.input,t&&e.items.indexOf(t)<0&&(e.items.push(t),e.input="")},e.removeFromItems=function(t){e.items.splice(e.items.indexOf(t),1)},e.$on("$locationChangeStart",function(t,s){if(s=s.split("#").pop(),e.input&&e.addItem(e.input),e.editMode&&!angular.equals(e.items,e.itemsSource)){var i=r.open({template:'<div class="modal-header"><h3 class="modal-title">Warning</h3></div><div class="modal-body">You have unsaved changes. Save changes or discard?</div><div class="modal-footer"><div class="btn btn-default" ng-click="cancel()">Cancel</div><div class="btn btn-warning" ng-click="discard()">Discard</div><div class="btn btn-primary" ng-click="save()">Save</div></div>',controller:["$scope","$modalInstance",function(e,t){e.save=function(){t.close("save")},e.discard=function(){t.close("discard")},e.cancel=function(){t.close("cancel")}}]});i.result.then(function(t){switch(t){case"save":e.save();break;case"discard":e.editMode=!1,n.path(s)}}),t.preventDefault()}})}]}}]),angular.module("ambariAdminConsole").factory("User",["Restangular","$http","Settings",function(e,t,n){e.addResponseInterceptor(function(e,t,n,r,s,i){var o;return"getList"===t?(o=e.items,o.itemTotal=e.itemTotal):o=e,o});e.all("users");return{list:function(e){return t.get(n.baseUrl+"/users/?Users/user_name.matches(.*"+e.searchString+".*)&fields=*&from="+(e.currentPage-1)*e.usersPerPage+"&page_size="+e.usersPerPage+("*"===e.ldap_user?"":"&Users/ldap_user="+e.ldap_user)+("*"===e.active?"":"&Users/active="+e.active)+(e.admin?"&Users/admin=true":""))},listByName:function(e){return t.get(n.baseUrl+"/users?Users/user_name.matches(.*"+e+".*)&from=0&page_size=20")},get:function(t){return e.one("users",t).get()},create:function(t){return e.all("users").post(t)},setActive:function(t,n){return e.one("users",t).customPUT({"Users/active":n})},setAdmin:function(t,n){return e.one("users",t).customPUT({"Users/admin":n})},setPassword:function(e,r,s){return t({method:"PUT",url:n.baseUrl+"/users/"+e.user_name,data:{"Users/password":r,"Users/old_password":s}})},"delete":function(t){return e.one("users",t).remove()},getPrivileges:function(e){return t.get(n.baseUrl+"/privileges",{params:{"PrivilegeInfo/principal_type":"USER","PrivilegeInfo/principal_name":encodeURIComponent(e),fields:"*"}})}}}]),angular.module("ambariAdminConsole").factory("Group",["$http","$q","Settings",function(e,t,n){function r(e){"string"==typeof e?this.group_name=e:"object"==typeof e&&(angular.extend(this,e.Groups),this.getMembers())}return r.prototype.isLDAP=function(){var r=t.defer(),s=this;return"boolean"==typeof this.ldap_group?r.resolve(this.ldap_group):e({method:"GET",url:n.baseUrl+"/groups/"+this.group_name}).success(function(e){s.ldap_group=e.Groups.ldap_group,r.resolve(s.ldap_group)}),r.promise},r.prototype.save=function(){return e({method:"POST",url:n.baseUrl+"/groups",data:{"Groups/group_name":this.group_name}})},r.prototype.destroy=function(){var r=t.defer();return e["delete"](n.baseUrl+"/groups/"+this.group_name).success(function(){r.resolve()}).error(function(e){r.reject(e)}),r.promise},r.prototype.getMembers=function(){var r=t.defer(),s=this;return e({method:"GET",url:n.baseUrl+"/groups/"+this.group_name+"/members"}).success(function(e){s.members=[],angular.forEach(e.items,function(e){s.members.push(e.MemberInfo.user_name)}),r.resolve(s.members)}).error(function(e){r.reject(e)}),r.promise},r.prototype.saveMembers=function(){var r=this,s=t.defer(),i=[];return angular.forEach(this.members,function(e){i.push({"MemberInfo/user_name":e,"MemberInfo/group_name":r.group_name})}),e({method:"PUT",url:n.baseUrl+"/groups/"+this.group_name+"/members",data:i}).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},r.prototype.addMember=function(r){var s=t.defer();return e({method:"POST",url:n.baseUrl+"/groups/"+this.group_name+"/members/"+encodeURIComponent(member.user_name)}).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},r.prototype.removeMember=function(t){return e["delete"](n.baseUrl+"/groups/"+this.group_name+"/members/"+t)},r.removeMemberFromGroup=function(t,r){return e["delete"](n.baseUrl+"/groups/"+t+"/members/"+r)},r.addMemberToGroup=function(t,r){return e.post(n.baseUrl+"/groups/"+t+"/members/"+r)},r.all=function(s){var i=t.defer();return e.get(n.baseUrl+"/groups?Groups/group_name.matches(.*"+s.searchString+".*)&fields=*&from="+(s.currentPage-1)*s.groupsPerPage+"&page_size="+s.groupsPerPage+("*"===s.ldap_group?"":"&Groups/ldap_group="+s.ldap_group)).success(function(e){var t=[];Array.isArray(e.items)&&angular.forEach(e.items,function(e){t.push(new r(e))}),t.itemTotal=e.itemTotal,i.resolve(t)}).error(function(e){i.reject(e)}),i.promise},r.listByName=function(t){return e.get(n.baseUrl+"/groups?Groups/group_name.matches(.*"+t+".*)")},r.getPrivileges=function(t){return e.get(n.baseUrl+"/privileges",{params:{"PrivilegeInfo/principal_type":"GROUP","PrivilegeInfo/principal_name":t,fields:"*"}})},r}]),angular.module("ambariAdminConsole").factory("View",["$http","$q","Settings",function(e,t,n){function r(e){angular.extend(this,e)}function s(e){var t=this;t.view_name=e.ViewInfo.view_name,t.versions="",t.instances=[],t.canCreateInstance=!1;var n={};angular.forEach(e.versions,function(e){n[e.ViewVersionInfo.version]={count:e.instances.length,status:e.ViewVersionInfo.status},"DEPLOYED"===e.ViewVersionInfo.status&&(t.canCreateInstance=!0),angular.forEach(e.instances,function(t){t.label=t.ViewInstanceInfo.label||e.ViewVersionInfo.label||t.ViewInstanceInfo.view_name}),t.instances=t.instances.concat(e.instances)}),t.versions=n,t.versionsList=e.versions}return r.find=function(s,i,o){var a=t.defer(),c=["privileges/PrivilegeInfo","ViewInstanceInfo","resources"];return e({method:"GET",url:n.baseUrl+"/views/"+s+"/versions/"+i+"/instances/"+o,mock:"view/views.json",params:{fields:c.join(",")}}).success(function(e){a.resolve(new r(e))}).error(function(e){a.reject(e)}),a.promise},s.getInstance=function(e,t,n){return r.find(e,t,n)},s.deleteInstance=function(t,r,s){return e["delete"](n.baseUrl+"/views/"+t+"/versions/"+r+"/instances/"+s,{headers:{"X-Requested-By":"ambari"}})},s.updateInstance=function(t,r,s,i){return e({method:"PUT",url:n.baseUrl+"/views/"+t+"/versions/"+r+"/instances/"+s,data:i})},s.getPermissions=function(r){var s=t.defer(),i=["permissions/PermissionInfo/permission_name"];return e({method:"GET",url:n.baseUrl+"/views/"+r.viewName+"/versions/"+r.version,params:{fields:i.join(",")}}).success(function(e){s.resolve(e.permissions)})["catch"](function(e){s.reject(e)}),s.promise},s.getPrivileges=function(r){var s=t.defer();return e({method:"GET",url:n.baseUrl+"/views/"+r.viewName+"/versions/"+r.version+"/instances/"+r.instanceId,params:{fields:"privileges/PrivilegeInfo"}}).success(function(e){s.resolve(e.privileges)})["catch"](function(e){s.reject(e)}),s.promise},s.getVersions=function(r){var s=t.defer();return e({method:"GET",url:n.baseUrl+"/views/"+r+"?versions/ViewVersionInfo/status=DEPLOYED"}).success(function(e){var t=[];angular.forEach(e.versions,function(e){t.push(e.ViewVersionInfo.version)}),s.resolve(t)})["catch"](function(e){s.reject(e)}),s.promise},s.createInstance=function(r){var s=t.defer(),i={},o={},a={instance_name:r.instance_name,label:r.label,visible:r.visible,icon_path:r.icon_path,icon64_path:r.icon64_path,description:r.description};return angular.forEach(r.properties,function(e){e.clusterConfig?i[e.name]=e.value:o[e.name]=e.value}),a.properties=o,r.isLocalCluster?a.cluster_handle=r.clusterName:angular.extend(a.properties,i),e({method:"POST",url:n.baseUrl+"/views/"+r.view_name+"/versions/"+r.version+"/instances/"+r.instance_name,data:{ViewInstanceInfo:a}}).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},s.createPrivileges=function(t,r){return e({method:"POST",url:n.baseUrl+"/views/"+t.view_name+"/versions/"+t.version+"/instances/"+t.instance_name+"/privileges",data:r})},s.deletePrivileges=function(t,r){return e({method:"DELETE",url:n.baseUrl+"/views/"+t.view_name+"/versions/"+t.version+"/instances/"+t.instance_name+"/privileges",data:r})},s.updatePrivileges=function(t,r){return e({method:"PUT",url:n.baseUrl+"/views/"+t.view_name+"/versions/"+t.version+"/instances/"+t.instance_name+"/privileges",data:r})},s.deletePrivilege=function(t){return e({method:"DELETE",url:n.baseUrl+"/views/"+t.view_name+"/versions/"+t.version+"/instances/"+t.instance_name+"/privileges",params:{"PrivilegeInfo/principal_type":t.principalType,"PrivilegeInfo/principal_name":t.principalName,"PrivilegeInfo/permission_name":t.permissionName}})},s.getMeta=function(t,r){return e({method:"GET",url:n.baseUrl+"/views/"+t+"/versions/"+r})},s.checkViewVersionStatus=function(r,s){var i=t.defer();return e({method:"GET",url:n.baseUrl+"/views/"+r+"/versions/"+s,params:{fields:"ViewVersionInfo/status"}}).then(function(e){i.resolve(e.data.ViewVersionInfo.status)})["catch"](function(e){i.reject(e)}),i},s.getAllVisibleInstance=function(){var r=t.defer();return e({method:"GET",url:n.baseUrl+"/views",mock:"view/views.json",params:{fields:"versions/instances/ViewInstanceInfo","versions/ViewVersionInfo/system":!1,"versions/instances/ViewInstanceInfo/visible":!0}}).then(function(e){var t=[];e.data.items.forEach(function(e){Array.isArray(e.versions)&&e.versions.forEach(function(e){e.instances.forEach(function(e){t.push(e.ViewInstanceInfo)})})}),r.resolve(t)}),r.promise},s.all=function(){var r=t.defer(),i=["versions/ViewVersionInfo/version","versions/instances/ViewInstanceInfo","versions/*"];return e({method:"GET",url:n.baseUrl+"/views",params:{fields:i.join(","),"versions/ViewVersionInfo/system":!1}}).success(function(e){var t=[];angular.forEach(e.items,function(e){t.push(new s(e))}),r.resolve(t)}).error(function(e){r.reject(e)}),r.promise},s}]),angular.module("ambariAdminConsole").factory("Cluster",["$http","$q","Settings",function(e,t,n){return{repoStatusCache:{},getAllClusters:function(){var r=t.defer();return e.get(n.baseUrl+"/clusters",{mock:"cluster/clusters.json"}).then(function(e,t,n){r.resolve(e.data.items)})["catch"](function(e){r.reject(e)}),r.promise},getStatus:function(){var r=t.defer();return e.get(n.baseUrl+"/clusters?fields=Clusters/provisioning_state",{mock:"cluster/init.json"}).then(function(e,t,n){r.resolve(e.data.items[0])})["catch"](function(e){r.reject(e)}),r.promise},getAmbariVersion:function(){var r=t.defer();return e.get(n.baseUrl+"/services/AMBARI/components/AMBARI_SERVER?fields=RootServiceComponents/component_version,RootServiceComponents/properties/server.os_family&minimal_response=true",{mock:"2.1"}).then(function(e){r.resolve(e.data.RootServiceComponents.component_version)})["catch"](function(e){r.reject(e)}),r.promise},getAmbariTimeout:function(){var r=t.defer(),s="/services/AMBARI/components/AMBARI_SERVER?fields=RootServiceComponents/properties/user.inactivity.timeout.default";return e.get(n.baseUrl+s).then(function(e){var t=e.data.RootServiceComponents.properties,n=t?t["user.inactivity.timeout.default"]:0;r.resolve(n)})["catch"](function(e){r.reject(e)}),r.promise},getPermissions:function(){var r=t.defer();return e({method:"GET",url:n.baseUrl+"/permissions",mock:"permission/permissions.json",params:{fields:"PermissionInfo","PermissionInfo/resource_name":"CLUSTER"}}).success(function(e){r.resolve(e.items)})["catch"](function(e){r.reject(e)}),r.promise},getPrivileges:function(r){var s=t.defer();return e({method:"GET",url:n.baseUrl+"/clusters/"+r.clusterId,params:{fields:"privileges/PrivilegeInfo"}}).success(function(e){s.resolve(e.privileges)})["catch"](function(e){s.reject(e)}),s.promise},createPrivileges:function(t,r){return e({method:"POST",url:n.baseUrl+"/clusters/"+t.clusterId+"/privileges",data:r})},deletePrivileges:function(t,r){return e({method:"DELETE",url:n.baseUrl+"/clusters/"+t.clusterId+"/privileges",data:r})},updatePrivileges:function(t,r){return e({method:"PUT",url:n.baseUrl+"/clusters/"+t.clusterId+"/privileges",data:r})},deletePrivilege:function(t,r,s,i){return e({method:"DELETE",url:n.baseUrl+"/clusters/"+t+"/privileges",params:{"PrivilegeInfo/principal_type":s,"PrivilegeInfo/principal_name":i,"PrivilegeInfo/permission_name":r}})},editName:function(t,r){return e({method:"PUT",url:n.baseUrl+"/clusters/"+t,data:{Clusters:{cluster_name:r}}})},getRepoVersionStatus:function(r,s){var i=this,o=t.defer(),a=n.baseUrl+"/clusters/"+r+"/stack_versions?fields=*&ClusterStackVersions/repository_version="+s;return e.get(a,{mock:"cluster/repoVersionStatus.json"}).success(function(e){e=e.items;var t={};if(e.length>0){var n=e[0].ClusterStackVersions.host_states,r=n.CURRENT.length,a=n.INSTALLED.length,c=0;angular.forEach(n,function(e){c+=e.length}),t.status=r>0?"current":a>0?"installed":"",t.currentHosts=r,t.installedHosts=a,t.totalHosts=c,t.stackVersionId=e[0].ClusterStackVersions.id}else t.status="";i.repoStatusCache[s]=t.status,o.resolve(t)})["catch"](function(e){o.reject(e)}),o.promise}}}]),angular.module("ambariAdminConsole").factory("Alert",[function(){function e(e,n,i){r||(r=angular.element('<div class="alert-container"/>').appendTo("body"),r.on("mouseenter",function(){clearTimeout(s)}).on("mouseleave",function(){t()}));var o=angular.element('<div><div class="icon-box"></div></div>').addClass("ambariAlert").addClass(i).addClass("invisible");o.append('<div class="content">'+e+"</div>"),n&&($(' <a href class="more-collapse"> more...</a>').appendTo(o.find(".content")).on("click",function(){return o.find(".more").show(),$(this).remove(),!1}),o.append('<div class="more">'+n.replace(/\./g,".<wbr />")+"</div>")),$('<button type="button" class="close"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>').appendTo(o).on("click",function(){var e=$(this).closest(".ambariAlert");e.remove()});var a=$('<span class="glyphicon"></span>');switch(i){case"error":a.addClass("glyphicon-remove-sign");break;case"success":a.addClass("glyphicon-ok-sign");break;case"info":a.addClass("glyphicon-info-sign")}o.find(".icon-box").append(a),o.appendTo(r),setTimeout(function(){o.removeClass("invisible")},0),t()}function t(){clearTimeout(s),s=setTimeout(n,5e3)}function n(){r.children().first().remove(),r.children().length?t():(r.remove(),r=null)}var r=null,s=null;return{error:function(t,n){e(t,n,"error")},success:function(t,n){e(t,n,"success")},info:function(t,n){e(t,n,"info")}}}]),angular.module("ambariAdminConsole").factory("PermissionLoader",["Cluster","View","$q",function(e,t,n){function r(e,t){var r=n.defer();return e.getPermissions(t).then(function(n){var s={};angular.forEach(n,function(e){e.GROUP=[],e.USER=[],s[e.PermissionInfo.permission_name]=e}),e.getPrivileges(t).then(function(e){angular.forEach(e,function(e){s[e.PrivilegeInfo.permission_name][e.PrivilegeInfo.principal_type].push(e.PrivilegeInfo.principal_name)}),r.resolve(s)})["catch"](function(e){r.reject(e)})})["catch"](function(e){r.reject(e)}),r.promise}return{getClusterPermissions:function(t){return r(e,t)},getViewPermissions:function(e){return r(t,e)}}}]),angular.module("ambariAdminConsole").factory("PermissionSaver",["Cluster","View","$q","getDifference",function(e,t,n,r){function s(e,t,n){var r=[];return angular.forEach(t,function(e){var t=e.USER.toString().split(",").filter(function(e){return e.trim()}).map(function(e){return e.trim()}),n=e.GROUP.toString().split(",").filter(function(e){return e.trim()}).map(function(e){return e.trim()});r=r.concat(t.map(function(t){return{PrivilegeInfo:{permission_name:e.PermissionInfo.permission_name,principal_name:t,principal_type:"USER"}}})),r=r.concat(n.map(function(t){return{PrivilegeInfo:{permission_name:e.PermissionInfo.permission_name,principal_name:t,principal_type:"GROUP"}}}))}),e.updatePrivileges(n,r)}return{saveClusterPermissions:function(t,n,r){return s(e,t,n,r)},saveViewPermissions:function(e,n){return s(t,e,n)}}}]),angular.module("ambariAdminConsole").factory("ConfirmationModal",["$modal","$q",function(e,t){return{show:function(n,r,s,i){var o=t.defer(),a=e.open({templateUrl:"views/modals/ConfirmationModal.html",controller:["$scope","$modalInstance",function(e,t){e.header=n,e.isTempalte=!!r.url,e.body=r,e.innerScope=r.scope,e.confirmText=s||"OK",e.cancelText=i||"Cancel",e.ok=function(){t.close(),o.resolve()},e.cancel=function(){t.dismiss(),o.reject()}}]});return a.result.then(function(){},function(){o.reject()}),o.promise}}}]),angular.module("ambariAdminConsole").factory("Auth",["$http","Settings","$window",function(e,t,n){var r,s;return localStorage.ambari&&(r=JSON.parse(localStorage.ambari),r&&r.app&&r.app.loginName&&(s=r.app.loginName)),{signout:function(){var r=JSON.parse(localStorage.ambari);delete r.app.authenticated,delete r.app.loginName,delete r.app.user,localStorage.ambari=JSON.stringify(r);var s=n.location.protocol+"//"+Date.now()+":"+Date.now()+"@"+n.location.hostname+(n.location.port?":"+n.location.port:"");return e({method:"GET",url:s+t.baseUrl+"/logout"})},getCurrentUser:function(){return s}}}]),angular.module("ambariAdminConsole").factory("getDifference",[function(){return function(e,t){var n={add:[],del:[]};return angular.forEach(t,function(t){var r=e.indexOf(t);r>=0?e.splice(r,1):n.add.push(t)}),n.del=e,n}}]),angular.module("ambariAdminConsole").service("UnsavedDialog",["$modal",function(e){return function(){var t=e.open({template:'<div class="modal-header"><h3 class="modal-title">Warning</h3></div><div class="modal-body">You have unsaved changes. Save changes or discard?</div><div class="modal-footer"><div class="btn btn-default" ng-click="cancel()">Cancel</div><div class="btn btn-warning" ng-click="discard()">Discard</div><div class="btn btn-primary" ng-click="save()">Save</div></div>',controller:["$scope","$modalInstance",function(e,t){e.save=function(){t.close("save")},e.discard=function(){t.close("discard")},e.cancel=function(){t.close("cancel")}}]});return t.result}}]),angular.module("ambariAdminConsole").factory("Stack",["$http","$q","Settings",function(e,t,n){return{allStackVersions:function(){var r=n.baseUrl+"/stacks?fields=versions/*",s=t.defer();return e.get(r,{mock:"stack/allStackVersions.json"}).success(function(e){var t=[];angular.forEach(e.items,function(e){angular.forEach(e.versions,function(e){var n=e.Versions.stack_name,r=e.Versions.stack_version,s=e.Versions.upgrade_packs,i=e.Versions.active;t.push({stack_name:n,stack_version:r,displayName:n+"-"+r,upgrade_packs:s,active:i})})}),s.resolve(t)}).error(function(e){s.reject(e)}),s.promise},allRepos:function(r,s){var i=r.version,o="/stacks?fields=versions/repository_versions/RepositoryVersions";i&&(o+="&versions/repository_versions/RepositoryVersions/display_name.matches(.*"+i+".*)");var a=t.defer();return e.get(n.baseUrl+o,{mock:"version/versions.json"}).success(function(e){var t=[];angular.forEach(e.items,function(e){angular.forEach(e.versions,function(e){var n=e.repository_versions;n.length>0&&(t=t.concat(n))})}),t=t.map(function(e){return e.RepositoryVersions});var n={};n.itemTotal=t.length;var r=(s.currentPage-1)*s.itemsPerPage,i=t.length-r>s.itemsPerPage?r+s.itemsPerPage:t.length;n.items=t.slice(r,i),n.showed=i-r,a.resolve(n)}).error(function(e){a.reject(e)}),a.promise},addRepo:function(t,r,s){var i="/stacks/"+t.stack_name+"/versions/"+t.stack_version+"/repository_versions/",o={},a={RepositoryVersions:o};return o.repository_version=t.stack_version+"."+r,o.display_name=t.stack_name+"-"+o.repository_version,a.operating_systems=[],s.forEach(function(e){e.selected&&a.operating_systems.push({OperatingSystems:{os_type:e.OperatingSystems.os_type},repositories:e.repositories.map(function(e){return{Repositories:{repo_id:e.Repositories.repo_id,repo_name:e.Repositories.repo_name,base_url:e.Repositories.base_url}}})})}),e.post(n.baseUrl+i,a)},getRepo:function(r,s){var i=n.baseUrl+"/stacks/"+s+"/versions?fields=repository_versions/operating_systems/repositories/*,repository_versions/RepositoryVersions/display_name&repository_versions/RepositoryVersions/repository_version="+r,o=t.defer();return e.get(i,{mock:"version/version.json"}).success(function(e){e=e.items[0];var t={id:e.repository_versions[0].RepositoryVersions.id,stackVersion:e.Versions.stack_version,stack:e.Versions.stack_name+"-"+e.Versions.stack_version,stackName:e.Versions.stack_name,versionName:e.repository_versions[0].RepositoryVersions.repository_version,displayName:e.repository_versions[0].RepositoryVersions.display_name,repoVersionFullName:e.Versions.stack_name+"-"+e.repository_versions[0].RepositoryVersions.repository_version,osList:e.repository_versions[0].operating_systems,updateObj:e.repository_versions[0]};o.resolve(t)}).error(function(e){o.reject(e)}),o.promise},updateRepo:function(r,s,i,o){var a=n.baseUrl+"/stacks/"+r+"/versions/"+s+"/repository_versions/"+i,c=t.defer();return e.put(a,o).success(function(e){c.resolve(e)}).error(function(e){c.reject(e)}),c.promise},deleteRepo:function(r,s,i){var o=n.baseUrl+"/stacks/"+r+"/versions/"+s+"/repository_versions/"+i,a=t.defer();return e["delete"](o).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise},getSupportedOSList:function(r,s){var i=n.baseUrl+"/stacks/"+r+"/versions/"+s+"?fields=operating_systems/repositories/Repositories",o=t.defer();return e.get(i,{mock:"stack/operatingSystems.json"}).success(function(e){o.resolve(e)}).error(function(e){o.reject(e);
}),o.promise},validateBaseUrls:function(r,s,i){var o=t.defer(),a=n.baseUrl+"/stacks/"+i.stack_name+"/versions/"+i.stack_version,c=0,u=[];return r?o.resolve(u):s.forEach(function(t){t.selected&&t.repositories.forEach(function(n){c++,e.post(a+"/operating_systems/"+t.OperatingSystems.os_type+"/repositories/"+n.Repositories.repo_id+"?validate_only=true",{Repositories:{base_url:n.Repositories.base_url}},{repo:n}).success(function(){c--,0===c&&o.resolve(u)}).error(function(e,t,n,r){u.push(r.repo),c--,0===c&&o.resolve(u)})})}),o.promise},highlightInvalidUrls:function(e){e.forEach(function(e){e.hasError=!0})}}}]);